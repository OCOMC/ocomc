//////////// smm_ep node //////////////////

InputRec {

	String record_type;
	String record_number;
	String record_status;
	String check_sum;
	String call_reference;
	String exchange_id;
	String calling_imsi;
	String calling_imei;
	String calling_number;
	String calling_category;
	String calling_ms_classmark;
	String sms_centre;
	String served_subs_lac;
	String served_subs_ci;
	String incoming_time;
	String cause_for_termination;
	String msc_type;
	String called_number;
	String calling_number_ton;
	String called_number_ton;
	String calling_vmsc_number;
	String sms_type;
	String dialled_digits;
	String call_reference_time;
	String routing_category;
	String concatenated_sms_reference;
	String num_of_concatenated_sms;
	String concatenated_record_number;
	String application_info;
	String add_routing_category;
	String dialled_digits_ton;
	String served_subs_mcc;
	String radio_network_type;
	String served_subs_mnc;
	String hot_billing_record_number;
	String called_imsi;
	String calling_imeisv;
	String ue_time_zone;
	String pni;
           String tariff_class;
           String sms_length;
           String command_type;
           String message_reference;

} in;

OutputRec {
	
	String record_type;
	String record_number;
	String record_status;
	String check_sum;
	String call_reference;
	String exchange_id;
	String temp_intermediate_record_number;
           String temp_intermediate_charging_ind;
           String temp_number_of_ss_records;
	String calling_imsi;
	String calling_imei;
	String calling_number;
	String calling_category;
	String calling_ms_classmark;
	String called_imsi; 
	String served_subs_lac;
	String served_subs_ci;
	String called_number;
	String cause_for_termination;
	String msc_type;
	String calling_number_ton;
	String called_number_ton;
	String calling_vmsc_number;
	String sms_type;
	String dialled_digits;
	String call_reference_time;
	String routing_category;
	String concatenated_sms_reference;
	String concatenated_record_number;
	String application_info;
	String add_routing_category;
	String dialled_digits_ton;
	String channel_rate_indicator;
	String in_channel_allocated_time;
	String incoming_time;
	String incoming_time_temp;
	String served_subs_mnc;
	String hot_billing_record_number;
	String sms_centre;
	String num_of_concatenated_sms;
	String ue_time_zone;
	String pni;
           String tariff_class;
           String sms_length;
           String command_type;
           String message_reference;
	String served_subs_mcc;
	String radio_network_type;
	String calling_imeisv;
        
String temp_orig_mcz_modify_direction;
String temp_orig_dialling_class;
String temp_leg_call_reference;
String temp_call_reference_time;
String temp_speech_version;
String temp_loc_routing_number;
String temp_npdb_query_status;
String temp_loc_routing_number_ton;
String temp_cdb_indicator;
String temp_camel_call_reference;
String temp_camel_exchange_id_ton;
String temp_camel_exchange_id;
String temp_number_of_all_in_records;
String temp_cug_information;
String temp_cug_outgoing_access;
String temp_cug_interlock;
String temp_called_subs_last_ex_id_ton;
String temp_calling_subs_first_mcc;
String temp_calling_subs_first_mnc;
String temp_calling_subs_last_mcc;
String temp_calling_subs_last_mnc;
String temp_called_subs_first_mcc;
String temp_called_subs_first_mnc;
String temp_called_subs_last_mcc;
String temp_called_subs_last_mnc;
String temp_radio_network_type;
String temp_selected_codec;
String temp_emergency_call_category;
String temp_out_bnc_connection_type;
String temp_outside_user_plane_index;
String temp_outside_control_plane_index;
String temp_global_call_reference;
String temp_optimal_routing_indicator;
String temp_hot_billing_record_number;
String temp_called_imeisv;
String temp_calling_imeisv;
String temp_cs_arp;
String temp_virtual_msc_id_ton;
String temp_virtual_msc_id;
String temp_number_of_in_announcements;
String temp_nbr_of_orig_cap_in_recs;
String temp_redirected_indicator;
String temp_connected_to_number_ton;
String temp_connected_to_number;
String temp_in_category_key;
String temp_add_routing_category;
String temp_routing_category;
String temp_regional_subs_indicator;
String temp_regional_subs_location_type;
String temp_calling_charging_area;
String temp_number_of_in_records;
String temp_scp_connection;
String temp_orig_mcz_change_percent;
String temp_orig_mcz_change_direction;
String temp_out_circuit_group_name;
String temp_in_circuit_group_name;
String temp_req_fixed_nw_user_rate;
String temp_req_other_modem_type;
String temp_acceptable_channel_codings;
String temp_req_number_of_channels;
String temp_req_air_interface_user_rate;
String temp_req_user_initiated_mod_ind;
String temp_used_number_of_channels;
String temp_used_other_modem_type;
String temp_used_fixed_nw_user_rate;
String temp_used_channel_coding;
String temp_calling_cell_band;
String temp_ms_classmark3;
String temp_orig_mcz_duration_ten_ms;
String temp_outpulsed_number_ton;
String temp_outpulsed_number;
String temp_ct_third_party_number_ton;
String temp_ct_third_party_number;
String temp_emlpp_level;
String temp_out_circuit;
String temp_out_circuit_group;
String temp_used_air_interface_user_rate;
String temp_calling_subs_second_mcc;
String temp_calling_subs_second_mnc;
String temp_calling_subs_last_ex_id_ton;

    String cdr_service;
    String eventType;
    String version;
    String operationType;
    Integer direction;
    String sessionId;
    TimeInMilliSecs timestamp;
    String calling_imsi_temp;
    String userIdentity;

} out;


//Assign the input record attribute to output record attribute here...

         out.cdr_service         =  "SettlementRoamingOutcollect";
		 out.eventType           =  "EventDelayedSessionTelcoGsmSmsRoaming";
        out.version               =  "1.0";
	        out.operationType     =  "Terminate";
        out.direction             = 0;
			 
            
                    
	 
           if (fieldExists(in, "record_type") &&  in.record_type != "") {
            out.record_type = in.record_type;
                  }
           else
                   {
                logInfo("record_type is empty");
	           }

	if (fieldExists(in, "record_number") &&  in.record_number != "") {
            out.record_number = in.record_number;
    }    
    else
    {
                logInfo("record_number is empty");
    }

    if (fieldExists(in, "record_status") &&  in.record_status != "") {
            out.record_status = in.record_status;
    }
    else
    {
                logInfo("record_status is empty");
    }	
	if (fieldExists(in, "check_sum") &&  in.check_sum != "") {
            out.check_sum = in.check_sum;

           }
    else
    {
                logInfo("check_sum is empty");
    }
	if (fieldExists(in, "call_reference") &&  in.call_reference != "") {
            out.call_reference = in.call_reference;
    }
    else
    {
                logInfo("call_reference is empty");
    }
	if (fieldExists(in, "exchange_id") &&  in.exchange_id != "") {
            out.exchange_id = in.exchange_id;
    }
    else
    {
                logInfo("exchange_id is empty");
    }
	      out.temp_intermediate_record_number = "NULL";
		  out.temp_intermediate_charging_ind = "NULL";
		  out.temp_number_of_ss_records = ";";
	if (fieldExists(in, "calling_imsi") &&  in.calling_imsi != "") {
               out.calling_imsi = in.calling_imsi;
            if ( substr(in.calling_imsi,0,6) == "302610" || substr(in.calling_imsi,0,6) == "302220" || substr(in.calling_imsi,0,6) == "302780"  || substr(in.calling_imsi,0,6) == "302370" || substr(in.calling_imsi,0,6) == "302720" || substr(in.calling_imsi,0,6) == "310030"){
	     out.userIdentity = substr(in.calling_imsi,0,6);
}
         else{
             out.userIdentity =substr(in.calling_imsi,0,5);
             }
    }
    else
    {
                logInfo("calling_imsi is empty");
    }
    if (fieldExists(in, "calling_imei") && in.calling_imei != ""){
                out.calling_imei = in.calling_imei;
}
    else
    {
                 logInfo("calling_imei is empty");
	}
	if (fieldExists(in, "calling_number") &&  in.calling_number != "") {
            out.calling_number = in.calling_number;

           } 

    else
    {
                logInfo("calling_number is empty");
    }
	if (fieldExists(in, "calling_category") &&  in.calling_category != "") {
            out.calling_category = in.calling_category;
    }
    else
    {
                logInfo("calling_category is empty");
    }
	
	
	if (fieldExists(in, "calling_ms_classmark") && in.calling_ms_classmark != "") {
	          out.calling_ms_classmark  = in.calling_ms_classmark;
	}
    else
    {
                logInfo("calling_ms_classmark is empty");
	}
	if (fieldExists(in, "called_imsi") && in.called_imsi != "") {
	          out.called_imsi = in.called_imsi;
	}
    else
    {
                logInfo("called_imsi is empty");
	}
	if (fieldExists(in, "served_subs_lac") && in.served_subs_lac != "") {
	          out.served_subs_lac = in.served_subs_lac;
	}
    else
    {
                logInfo("served_subs_lac is empty");
	}
	if (fieldExists(in, "served_subs_ci") && in.served_subs_ci != "") {
	          out.served_subs_ci  = in.served_subs_ci;
	}
    else
    {
                logInfo("served_subs_ci is empty");
	}
	if (fieldExists(in, "called_number") && in.called_number != "") {
                    
            if ((substr(in.called_number,0,2) == "91") || (substr(in.called_number,0,3) == "+91") || (substr(in.called_number,0,2) == "92") || (substr(in.called_number,0,3) == "+92" ) || (substr(in.called_number,0,2) == "93") || (substr(in.called_number,0,3) =="+93") || (substr(in.called_number,0,2) == "94") || (substr(in.called_number,0,3) == "+94") ||  (substr(in.called_number,0,2) == "95") || (substr(in.called_number,0,3) == "+95") ||  (substr(in.called_number,0,2) == "99") || (substr(in.called_number,0,3) == "+99")) {
             out.called_number ="244"+in.called_number;
          } 


          
	else {

                  out.called_number = in.called_number;
          }
	         
	}
    else
    {
                logInfo("called_number is empty");
        }
	
	if (fieldExists(in, "cause_for_termination") && in.cause_for_termination != "") {
	          out.cause_for_termination = in.cause_for_termination;
	}
    else
    {
                logInfo("cause_for_termination is empty");
	}
	if (fieldExists(in, "msc_type") && in.msc_type != "") {
	          out.msc_type = in.msc_type;
	}
    else
    {
                logInfo("msc_type is empty");
	}
	if (fieldExists(in, "calling_number_ton") && in.calling_number_ton != "") {
	          out.calling_number_ton = in.calling_number_ton;
	}
    else
    {
                logInfo("calling_number_ton is empty");
	}
	if (fieldExists(in, "called_number_ton") && in.called_number_ton != "") {
	          out.called_number_ton = in.called_number_ton;
	}
    else
    {
                logInfo("called_number_ton is empty");
	}
	if (fieldExists(in, "calling_vmsc_number") && in.calling_vmsc_number != "") {
	          out.calling_vmsc_number = in.calling_vmsc_number;
	}
    else
    {
                logInfo("calling_vmsc_number is empty");
	}
	if (fieldExists(in, "sms_type") && in.sms_type != "") {
	          out.sms_type = in.sms_type;
	}
    else
    {
                logInfo("sms_type is empty");
	}
	if (fieldExists(in, "dialled_digits") && in.dialled_digits != "") {
	          out.dialled_digits = in.dialled_digits;
	}
    else
    {
                logInfo("dialled_digits is empty");
	}
	if (fieldExists(in, "call_reference_time") && in.call_reference_time != "") {
	          out.call_reference_time = in.call_reference_time;
	}
    else
    {
                logInfo("call_reference_time is empty");
	}
	if (fieldExists(in, "routing_category") && in.routing_category != "") {
	          out.routing_category = in.routing_category;
	}
    else
    {
                logInfo("routing_category is empty");
	}

	if (fieldExists(in, "concatenated_sms_reference") && in.concatenated_sms_reference != "") {
	          out.concatenated_sms_reference = in.concatenated_sms_reference;
	}
    else
    {
                logInfo("concatenated_sms_reference is empty");
	}
	if (fieldExists(in, "concatenated_record_number") && in.concatenated_record_number != "") {
	          out.concatenated_record_number = in.concatenated_record_number;
	}
    else
    {
                logInfo("concatenated_record_number is empty");
	}
	if (fieldExists(in, "application_info") && in.application_info != "") {
	          out.application_info = in.application_info;
	}
    else
    {
                logInfo("application_info is empty");
	}
	if (fieldExists(in, "add_routing_category") && in.add_routing_category != "") {
	          out.add_routing_category  = in.add_routing_category;
	}
    else
    {
                logInfo("add_routing_categoryis empty");
	}
	if (fieldExists(in, "dialled_digits_ton") && in.dialled_digits_ton != "") {
	          out.dialled_digits_ton = in.dialled_digits_ton;
	}
    else
    {
                logInfo("dialled_digits_ton is empty");
	}
	 out.channel_rate_indicator= "NULL";
	 out.in_channel_allocated_time= "NULL";
	if (fieldExists(in, "incoming_time") && in.incoming_time != "") {
	        out.timestamp =str2TimeInMilliSecs(in.incoming_time, "yyyy-MM-dd HH:mm:ss");
                out.incoming_time=time2str( out.timestamp, "yyyyMMddHHmmss" );
	}
    else
    {
                logInfo("incoming_time is empty");
	}
	  out.incoming_time_temp = out.incoming_time;
	  
	
	if (fieldExists(in, "served_subs_mnc") && in.served_subs_mnc != "") {
	          out.served_subs_mnc = in.served_subs_mnc;
	}
	
    else
    {
                logInfo("served_subs_mnc is empty");
	}

	if (fieldExists(in, "hot_billing_record_number") && in.hot_billing_record_number != "") {
	          out.hot_billing_record_number = in.hot_billing_record_number;
	}
    else
    {
                   logInfo("hot_billing_record_number is empty");
     }
	 if (fieldExists(in, "sms_centre") && in.sms_centre != "") {
	          out.sms_centre = in.sms_centre;
	}
	
    else
    {
                logInfo("sms_centre is empty");
	}
	if (fieldExists(in, "num_of_concatenated_sms") && in.num_of_concatenated_sms != "") {
	          out.num_of_concatenated_sms = in.num_of_concatenated_sms;
	}
	
    else
    {
                logInfo("num_of_concatenated_sms is empty");
	}
	
if (fieldExists(in, "ue_time_zone") && in.ue_time_zone != "") {
	          out.ue_time_zone = in.ue_time_zone;
	}
    else
    {
                   logInfo("ue_time_zone is empty");
     }

if (fieldExists(in, "pni") && in.pni != "") {
	          out.pni  = in.pni;
	}
    else
    {
                   logInfo("pni is empty");
     }

if (fieldExists(in, "tariff_class") && in.tariff_class != "") {
	          out.tariff_class = in.tariff_class;
	}
    else
    {
                   logInfo("tariff_class is empty");
     }

if (fieldExists(in, "sms_length") && in.sms_length != "") {
	          out.sms_length  = in.sms_length;
	}
    else
    {
                   logInfo("sms_length is empty");
     }

if (fieldExists(in, "command_type") && in.command_type != "") {
	          out.command_type = in.command_type;
	}
    else
    {
                   logInfo("command_type is empty");
     }

if (fieldExists(in, "message_reference") && in.message_reference != "") {
	          out.message_reference  = in.message_reference;
	}
    else
    {
                   logInfo("message_reference is empty");
     }
	if (fieldExists(in, "served_subs_mcc") && in.served_subs_mcc != "") {
	          out.served_subs_mcc = in.served_subs_mcc;
	}
    else
    {
                logInfo("served_subs_mcc is empty");
	}
	if (fieldExists(in, "radio_network_type") && in.radio_network_type != "") {
	          out.radio_network_type  = in.radio_network_type;
	}
    else
    {
                logInfo("radio_network_type is empty");
	} 
	if (fieldExists(in, "calling_imeisv") && in.calling_imeisv != "") {
	          out.calling_imeisv  = in.calling_imeisv;
	}
    else
    {
                   logInfo("calling_imeisv is empty");
     }
                 

if (fieldExists(in, "calling_number") && in.calling_number != "" && fieldExists(in, "called_number") && in.called_number != "" && fieldExists(in, "incoming_time") && in.incoming_time != "") {
        out.sessionId  = out.calling_number+out.called_number+out.incoming_time;
   }
   else
   {
      logInfo("sessionId is empty");
   }

             out.temp_orig_mcz_change_direction = "NULL";
		 out.temp_orig_dialling_class = "NULL";
		 out.temp_leg_call_reference = "NULL";
		 out.temp_call_reference_time = "NULL";
		 out.temp_speech_version = "NULL";
		 out.temp_loc_routing_number = "NULL";
		 out.temp_npdb_query_status = "NULL";
		 out.temp_loc_routing_number_ton = "NULL";
		 out.temp_cdb_indicator = "NULL";
		 out.temp_camel_call_reference = "NULL";
		 out.temp_camel_exchange_id_ton = "NULL";
		 out.temp_camel_exchange_id = "NULL";
		 out.temp_number_of_all_in_records = "NULL";
		 out.temp_cug_information = "NULL";
		 out.temp_cug_outgoing_access = "NULL";
		 out.temp_cug_outgoing_access = "NULL";
		 out.temp_cug_interlock = "NULL";
		 out.temp_called_subs_last_ex_id_ton = "NULL";
		 out.temp_calling_subs_first_mcc = "NULL";
		 out.temp_calling_subs_first_mnc ="NULL";
		 out.temp_calling_subs_last_mcc = "NULL";
		 out.temp_calling_subs_last_mnc = "NULL";
		 out.temp_called_subs_first_mcc = "NULL";
		 out.temp_called_subs_first_mnc = "NULL";
		 out.temp_called_subs_last_mcc = "NULL";
		 out.temp_called_subs_last_mnc = "NULL";
		 out.temp_radio_network_type = "NULL";
		 out.temp_selected_codec = "NULL";
		 out.temp_emergency_call_category = "NULL";
		 out.temp_out_bnc_connection_type = "NULL";
		 out.temp_outside_user_plane_index = "NULL";
		 out.temp_outside_control_plane_index = "NULL";
		 out.temp_global_call_reference = "NULL";
		 out.temp_optimal_routing_indicator = "NULL";
		 out.temp_hot_billing_record_number = "NULL";
		 out.temp_called_imeisv = "NULL";
		 out.temp_calling_imeisv = "NULL";
		 out.temp_virtual_msc_id_ton = "NULL";
		 out.temp_virtual_msc_id = "NULL";
		 out.temp_number_of_in_announcements = "NULL";
		 out.temp_nbr_of_orig_cap_in_recs = "NULL";
		 out.temp_redirected_indicator = "NULL";
		 out.temp_connected_to_number_ton = "NULL";
		 out.temp_connected_to_number = "NULL";
		 out.temp_in_category_key ="NULL";
		 out.temp_add_routing_category = "NULL";
		 out.temp_routing_category = "NULL";
		 out.temp_regional_subs_indicator = "NULL";
		 out.temp_regional_subs_location_type ="NULL";
		 out.temp_calling_charging_area = "NULL";
		 out.temp_number_of_all_in_records = "NULL";
		 out.temp_scp_connection = "NULL";
		 out.temp_orig_mcz_change_percent = "NULL";
		 out.temp_orig_mcz_change_direction = "NULL";
		 out.temp_out_circuit_group_name = "NULL";
		 out.temp_in_circuit_group_name = "NULL";
		 out.temp_req_fixed_nw_user_rate = "NULL";
		 out.temp_req_other_modem_type = "NULL";
		 out.temp_acceptable_channel_codings = "NULL";
		 out.temp_req_air_interface_user_rate = "NULL";
		 out.temp_req_user_initiated_mod_ind = "NULL";
		 out.temp_used_number_of_channels = "NULL";
		 out.temp_used_other_modem_type = "NULL";
		 out.temp_used_fixed_nw_user_rate = "NULL";
		 out.temp_used_channel_coding = "NULL";
		 out.temp_calling_cell_band = "NULL";
		 out.temp_ms_classmark3 = "NULL";
		 out.temp_orig_mcz_duration_ten_ms = "NULL";
		 out.temp_outpulsed_number_ton = "NULL";
		 out.temp_outpulsed_number = "NULL";
		 out.temp_ct_third_party_number_ton = "NULL";
		 out.temp_ct_third_party_number = "NULL";
		 out.temp_emlpp_level = "NULL";
		 out.temp_out_circuit = "NULL";
		 out.temp_out_circuit_group = "NULL";
		 out.temp_used_air_interface_user_rate = "NULL";
		 out.temp_calling_subs_second_mcc = "NULL";
		 out.temp_calling_subs_second_mnc = "NULL";
		 out.temp_calling_subs_last_ex_id_ton = "NULL";

logInfo("userIdentity  -->"+out.userIdentity );
logInfo("calling_imsi_temp  -->"+out.calling_imsi_temp);    
logInfo( "record_type	-->"+out.record_type );
logInfo( "record_number	 -->"+out.record_number );
logInfo( "record_status	 -->"+out.record_status );
logInfo( "check_sum  -->"+out.check_sum );
logInfo( "call_reference -->"+out.call_reference );
logInfo( "exchange_id -->"+out.exchange_id );
logInfo( "temp_intermediate_record_number  -->"+out.temp_intermediate_record_number );
logInfo( "temp_intermediate_charging_ind  -->"+out.temp_intermediate_charging_ind );
logInfo( "temp_number_of_ss_records -->"+out.temp_number_of_ss_records );
logInfo( "calling_imsi -->"+out.calling_imsi );
logInfo( "calling_imei -->"+out.calling_imei );
logInfo( "calling_number -->"+out.calling_number );
logInfo( "calling_category -->"+out.calling_category );
logInfo( "calling_ms_classmark -->"+out.calling_ms_classmark );
logInfo( "called_imsi -->"+out.called_imsi );
logInfo( "served_subs_lac -->"+out.served_subs_lac );
logInfo( "served_subs_ci -->"+out.served_subs_ci );
logInfo( "called_number -->"+out.called_number );
logInfo( "cause_for_termination -->"+out.cause_for_termination );
logInfo( "msc_type -->"+out.msc_type );
logInfo( "calling_number_ton -->"+out.calling_number_ton );
logInfo( "called_number_ton -->"+out.called_number_ton );
logInfo( "calling_vmsc_number -->"+out.calling_vmsc_number );
logInfo( "sms_type -->"+out.sms_type );
logInfo( "dialled_digits -->"+out.dialled_digits );
logInfo( "call_reference_time -->"+out.call_reference_time );
logInfo( "routing_category -->"+out.routing_category );
logInfo( "concatenated_sms_reference -->"+out.concatenated_sms_reference );
logInfo( "concatenated_record_number -->"+out.concatenated_record_number );
logInfo( "application_info -->"+out.application_info );
logInfo( "add_routing_category -->"+out.add_routing_category );
logInfo( "dialled_digits_ton -->"+out.dialled_digits_ton );
logInfo( "channel_rate_indicator  -->"+out.channel_rate_indicator );
logInfo( "in_channel_allocated_time -->"+out.in_channel_allocated_time );
logInfo( "incoming_time  -->"+out.incoming_time );
logInfo( "incoming_time_temp  -->"+out.incoming_time_temp );
logInfo( "served_subs_mnc -->"+out.served_subs_mnc );
logInfo( "hot_billing_record_number -->"+out.hot_billing_record_number );
logInfo( "sms_centre  -->"+out.sms_centre );
logInfo( "num_of_concatenated_sms -->"+out.num_of_concatenated_sms );
logInfo( "ue_time_zone -->"+out.ue_time_zone );
logInfo( "pni -->"+out.pni );
logInfo( "tariff_class -->"+out.tariff_class );
logInfo( "sms_length -->"+out.sms_length );
logInfo( "command_type -->"+out.command_type );
logInfo( "message_reference -->"+out.message_reference );
logInfo( "served_subs_mcc -->"+out.served_subs_mcc );
logInfo( "radio_network_type -->"+out.radio_network_type );
logInfo( "calling_imeisv  -->"+out.calling_imeisv );
logInfo( "cdr_service -->"+out.cdr_service );
logInfo( "eventType -->"+out.eventType );
logInfo( "version -->"+out.version );
logInfo( "operationType -->"+out.operationType );
logInfo( "direction -->"+int2str(out.direction) );
logInfo ("sessionId -->"+out.sessionId );


write(out);