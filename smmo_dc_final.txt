import com.oracle.nm.oi.tachyon.util.TachyonFormatter;
JavaHook suspHandler=oracle.communications.brm.nm.nplhook.SuspenseMethodHandlerImpl;

Config {
PRODUCTTYPES "SettlementRoamingOutcollect";
PAYLOAD "SettlementRoamingOutcollect_EventDelayedSessionTelcoGsmSmsRoaming_Terminate_PAYLOAD";
PAYLOADDATATYPE "PAYLOADDATATYPE";
USAGEOBJECTS "USAGEBUILDER";
EVENT "EventDelayedSessionTelcoGsmSmsRoaming";
MODE "CUMULATIVE";
VERSION "1.0";
//TIME_ZONE "UTC";
TIME_ZONE "Africa/Luanda";
DATE_FORMAT "yyyyMMddHHmmss";
USAGE_REQUEST_BUILDER "SettlementRoamingOutcollect@EventDelayedSessionTelcoGsmSmsRoaming@1.0";
}


InputRec {

           String record_type;
	String record_number;
	String record_status;
	String check_sum;
	String call_reference;
	String exchange_id;
	String calling_imsi;
	String calling_imei;
	String calling_number;
	String calling_category;
	String calling_ms_classmark;
	String sms_centre;
	String served_subs_lac;
	String served_subs_ci;
	String incoming_time;
           String incoming_time_temp;
	String cause_for_termination;
	String msc_type;
	String called_number;
	String calling_number_ton;
	String called_number_ton;
	String calling_vmsc_number;
	String sms_type;
	String dialled_digits;
	String call_reference_time;
	String routing_category;
	String concatenated_sms_reference;
	String num_of_concatenated_sms;
	String concatenated_record_number;
	String application_info;
	String add_routing_category;
	String dialled_digits_ton;
	String served_subs_mcc;
	String radio_network_type;
	String served_subs_mnc;
	String hot_billing_record_number;
	String called_imsi;
	String calling_imeisv;
	String ue_time_zone;
	String pni;
           String tariff_class;
           String sms_length;
           String command_type;
           String message_reference;
            String calling_imsi_temp;	
             String userIdentity;
           String cdr_service;
           String eventType;
           String version;
           String operationType;
           Integer direction; 
            String sessionId;
        
}in;

OutputRec{

           String record_type;
	String record_number;
	String record_status;
	String check_sum;
	String call_reference;
	String exchange_id;
	String calling_imsi;
	String calling_imei;
	String calling_number;
	String calling_category;
	String calling_ms_classmark;
	String sms_centre;
	String served_subs_lac;
	String served_subs_ci;
	String incoming_time;
           String incoming_time_temp;
	String cause_for_termination;
	String msc_type;
	String called_number;
	String calling_number_ton;
	String called_number_ton;
	String calling_vmsc_number;
	String sms_type;
	String dialled_digits;
	String call_reference_time;
	String routing_category;
	String concatenated_sms_reference;
	//String num_of_concatenated_sms;
            Integer num_of_concatenated_sms;
	String concatenated_record_number;
	String application_info;
	String add_routing_category;
	String dialled_digits_ton;
	String served_subs_mcc;
	String radio_network_type;
	String served_subs_mnc;
	String hot_billing_record_number;
	String called_imsi;
	String calling_imeisv;
	String ue_time_zone;
	String pni;
            String tariff_class;
            String sms_length;
            String command_type;
            String message_reference;
            String calling_imsi_temp;
        String cdr_service;
        String eventType;
        String version;
        String operationType;
        Integer direction;
        String sessionId;
        String event_desc;
        Integer seq_no;
        String userIdentity;
       Integer usedUnitsSpecificUnit;

} out;

Integer sno;

Expose for SettlementRoamingOutcollect_EventDelayedSessionTelcoGsmSmsRoaming_Terminate_PAYLOAD{
           out.sessionId            "NETWORK_SESSION_ID";
           out.event_desc           "DESCR";
           out.userIdentity         "USER_IDENTITY";
           out.calling_number        "ZONE_ORIGIN";
           out.called_number         "ZONE_DEST";

           
           out.calling_imei          "GSM_INFO[0].IMEI";
           out.direction             "GSM_INFO[0].DIRECTION";
           out.num_of_concatenated_sms "GSM_INFO[0].NUMBER_OF_UNITS";
           //out.num_of_concatenated_sms  "USED_UNITS[0].SPECIFIC_UNIT";
        
           
           out.calling_number        "TELCO_INFO[0].CALLING_FROM";
           //out.cause_for_termination "TELCO_INFO[0].TERMINATE_CAUSE";
           out.called_number         "TELCO_INFO[0].CALLED_TO";
          
          

           // out.duration    "USED_UNITS[0].DURATION";

}
Expose for USAGEBUILDER{
        out.userIdentity             "PARAM1";
        out.sessionId                "PARAM2";
        out.incoming_time            "PARAM3";
        out.incoming_time            "PARAM4";
        out.seq_no                   "PARAM5";
}

Expose for PAYLOADDATATYPE {
        //out.num_of_concatenated_sms            "OCCURRENCE";
          out.usedUnitsSpecificUnit                  "OCCURRENCE";    
}   



if (suspHandler.isRecycled(in)>0) {
        logInfo("suspense id found, copying..." );
        suspHandler.append(in, out);
    }

out.record_type	= in.record_type;
out.record_number = in.record_number;
out.record_status = in.record_status;
out.check_sum = in.check_sum;
out.call_reference = in.call_reference;
out.exchange_id	= in.exchange_id;
out.calling_imsi	= in.calling_imsi;
out.calling_imei = in.calling_imei;
out.calling_number = in.calling_number;
out.calling_category = in.calling_category;
out.calling_ms_classmark = in.calling_ms_classmark;
out.sms_centre = in.sms_centre;
out.served_subs_lac = in.served_subs_lac;
out.served_subs_ci = in.served_subs_ci;
out.incoming_time = in.incoming_time;
out.incoming_time_temp =in.incoming_time_temp;
out.cause_for_termination = in.cause_for_termination;
out.msc_type = in.msc_type;
out.called_number = in.called_number;
out.calling_number_ton	= in.calling_number_ton;
out.called_number_ton = in.called_number_ton;
out.calling_vmsc_number = in.calling_vmsc_number;
out.sms_type = in.sms_type;
out.dialled_digits = in.dialled_digits;
out.call_reference_time = in.call_reference_time;
out.routing_category = in.routing_category;
out.concatenated_sms_reference = in.concatenated_sms_reference;
out.num_of_concatenated_sms = str2int(in.num_of_concatenated_sms);
out.concatenated_record_number	= in.concatenated_record_number;
out.application_info = in.application_info;
out.add_routing_category = in.add_routing_category;
out.dialled_digits_ton = in.dialled_digits_ton;
out.served_subs_mcc = in.served_subs_mcc;
out.radio_network_type = in.radio_network_type;
out.served_subs_mnc = in.served_subs_mnc;
out.hot_billing_record_number = in.hot_billing_record_number;
out.called_imsi = in.called_imsi;
out.calling_imeisv = in.calling_imeisv;
out.ue_time_zone = in.ue_time_zone;
out.pni = in.pni;
out.tariff_class = in.tariff_class;
out.sms_length = in.sms_length;
out.command_type = in.command_type;
out.message_reference = in.message_reference;

out.userIdentity = in.userIdentity;
out.calling_imsi_temp = in.calling_imsi_temp;
out.seq_no = sno+1;
out.cdr_service = in.cdr_service;
out.eventType = in.eventType;
out.version = in.version;
out.operationType = in.operationType;
out.direction = in.direction;
out.sessionId = in.sessionId;
out.event_desc = "OFFLINE";
//out.usedUnitsSpecificUnit =out.usedUnitsSpecificUnit;

logInfo( "record_type	-->"+out.record_type );
logInfo( "record_number	 -->"+out.record_number );
logInfo( "record_status	 -->"+out.record_status );
logInfo( "check_sum  -->"+out.check_sum );
logInfo( "call_reference -->"+out.call_reference );
logInfo( "exchange_id -->"+out.exchange_id );
//logInfo( "calling_imsi -->"+out.calling_imsi );
//logInfo( "calling_imei -->"+out.calling_imei );
logInfo( "calling_number -->"+out.calling_number );
//logInfo( "calling_category -->"+out.calling_category );
//logInfo( "calling_ms_classmark -->"+out.calling_ms_classmark );
logInfo( "sms_centre -->"+out.sms_centre );
logInfo( "served_subs_lac -->"+out.served_subs_lac );
logInfo( "served_subs_ci -->"+out.served_subs_ci );
logInfo( "incoming_time -->"+out.incoming_time );
logInfo( "incoming_time_temp -->"+out.incoming_time_temp );
logInfo( "cause_for_termination -->"+out.cause_for_termination );
logInfo( "msc_type -->"+out.msc_type );
logInfo( "called_number -->"+out.called_number );
logInfo( "calling_number_ton -->"+out.calling_number_ton );
logInfo( "called_number_ton -->"+out.called_number_ton );
//logInfo( "calling_vmsc_number -->"+out.calling_vmsc_number );
logInfo( "sms_type -->"+out.sms_type );
//logInfo( "dialled_digits -->"+out.dialled_digits );
logInfo( "call_reference_time -->"+out.call_reference_time );
logInfo( "routing_category -->"+out.routing_category );
logInfo( "concatenated_sms_reference -->"+out.concatenated_sms_reference );
logInfo( "num_of_concatenated_sms -->"+int2str(out.num_of_concatenated_sms ));
logInfo( "concatenated_record_number -->"+out.concatenated_record_number );
logInfo( "application_info -->"+out.application_info );
logInfo( "add_routing_category -->"+out.add_routing_category );
//logInfo( "dialled_digits_ton -->"+out.dialled_digits_ton );
logInfo( "served_subs_mcc -->"+out.served_subs_mcc );
logInfo( "radio_network_type -->"+out.radio_network_type );
logInfo( "served_subs_mnc -->"+out.served_subs_mnc );
//logInfo( "hot_billing_record_number -->"+out.hot_billing_record_number );
//logInfo( "called_imsi -->"+out.called_imsi );
//logInfo( "calling_imeisv -->"+out.calling_imeisv );
logInfo( "ue_time_zone -->"+out.ue_time_zone );
//logInfo( "pni -->"+out.pni );
logInfo( "tariff_class -->"+out.tariff_class );
logInfo( "sms_length -->"+out.sms_length );
//logInfo( "command_type -->"+out.command_type );
//logInfo( "message_reference -->"+out.message_reference );
logInfo ("cdr_service  -->"+out.cdr_service );
logInfo ("version  -->"+out.version );
logInfo ("eventType  -->"+out.eventType );
logInfo ("operationType  -->"+out.operationType );
logInfo ("direction -->"+int2str(out.direction) );
logInfo ("sessionId -->"+out.sessionId );
logInfo ("event_desc -->"+out.event_desc );
//logInfo ("basic_service_code -->"+out.basic_service_code );
//logInfo ("basic_service_type -->"+out.basic_service_type );
//logInfo ("seq_no -->"+int2str(out.seq_no) );
//logInfo ( "calling_imsi_temp   -->"+out.calling_imsi_temp );
logInfo ( "userIdentity --->"+out.userIdentity );
write(out);